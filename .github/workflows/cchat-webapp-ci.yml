name: Casual Chat WebApp CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  check-env:
    name: Check Environment
    runs-on: cc-runner
    steps:
      - name: Verify make Installment
        run: make -version
      - name: Verify node Installment
        run: node -v
      - name: Verify npm Installment
        run: npm -v
      - name: Verify xunit-viewer Installment
        run: xunit-viewer --version

  check-style:
    name: Check Style
    runs-on: cc-runner
    needs: [ check-env ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependency
        run: npm ci
      - name: Check Style
        run: npm run check

  check-i18n:
    name: Check I18n
    runs-on: cc-runner
    needs: [ check-env ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependency
        run: npm ci
      - name: Check I18n
        run: |
          cp i18n/en.json /tmp/en.json
          mkdir -p /tmp/fake-mobile-dir/assets/base/i18n/
          echo '{}' > /tmp/fake-mobile-dir/assets/base/i18n/en.json
          npm run mmjstool -- i18n extract-webapp --webapp-dir . --mobile-dir /tmp/fake-mobile-dir
          diff /tmp/en.json i18n/en.json 
          npm run mmjstool -- i18n clean-empty --webapp-dir . --mobile-dir /tmp/fake-mobile-dir --check
          rm -rf tmp

  check-type:
    name: Check Type
    runs-on: cc-runner
    needs: [ check-env ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependency
        run: npm ci
      - name: Check Type
        run: npm run check-types

  test:
    name: Unit Test
    runs-on: cc-runner
    needs: [ check-style , check-type , check-i18n]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependency
        run: npm ci
      - name: Test
        run: npm run test-ci 
      - name: Generate HTML Report
        run: xunit-viewer -r build/test-results.xml -o  test-results.html
      - name: Upload Test Report
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: |
            build/test-results.xml
            build/test-results.html

  build:
    name: Build
    runs-on: cc-runner
    needs: [ test ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependency
        run: |
          npm ci
          cd node_modules/mattermost-redux && npm ci && npm run build
      - name: Build
        run: npm run build 
      - name: Upload Webapp
        uses: actions/upload-artifact@v2
        with:
          name: casualchat-mattermost-webapp
          path: dist/
